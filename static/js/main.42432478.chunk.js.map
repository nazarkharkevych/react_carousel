{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","imagesScrolled","handleSlide","e","buttonType","currentTarget","innerHTML","_this$props","props","images","step","frameSize","infinite","nextSlideHandler","prevSlideHandler","setState","prevState","_createClass","key","value","_this$props2","this","itemWidth","animationDuration","carouselWidth","frameWidth","transition","transform","disabledPrev","disabledNext","_jsxs","className","style","width","children","_jsx","gap","map","image","i","src","alt","type","onClick","Component","App","_React$Component","handleChange","property","target","name","_objectSpread","_defineProperty","_this$state","action","htmlFor","id","onChange","min","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42432478.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ninterface State {\n  imagesScrolled: number;\n}\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    imagesScrolled: 0,\n  };\n\n  handleSlide = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const buttonType = e.currentTarget.innerHTML;\n\n    const { imagesScrolled } = this.state;\n    const {\n      images,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    if (buttonType === 'Next') {\n      this.nextSlideHandler(\n        images,\n        step,\n        frameSize,\n        infinite,\n        imagesScrolled,\n      );\n    }\n\n    if (buttonType === 'Prev') {\n      this.prevSlideHandler(\n        images,\n        step,\n        frameSize,\n        infinite,\n        imagesScrolled,\n      );\n    }\n  };\n\n  nextSlideHandler = (\n    images: string[],\n    step: number,\n    frameSize: number,\n    infinite: boolean,\n    imagesScrolled: number,\n  ) => {\n    if (imagesScrolled + step < images.length - frameSize) {\n      this.setState(prevState => ({\n        imagesScrolled: prevState.imagesScrolled + step,\n      }));\n    } else if (infinite && imagesScrolled === images.length - frameSize) {\n      this.setState({ imagesScrolled: 0 });\n    } else {\n      this.setState({ imagesScrolled: images.length - frameSize });\n    }\n  };\n\n  prevSlideHandler = (\n    images: string[],\n    step: number,\n    frameSize: number,\n    infinite: boolean,\n    imagesScrolled: number,\n  ) => {\n    if (imagesScrolled - step > 0) {\n      this.setState(prevState => ({\n        imagesScrolled: prevState.imagesScrolled - step,\n      }));\n    } else if (infinite && imagesScrolled === 0) {\n      this.setState({ imagesScrolled: images.length - frameSize });\n    } else {\n      this.setState({ imagesScrolled: 0 });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      animationDuration,\n      infinite,\n      frameSize,\n    } = this.props;\n\n    const { imagesScrolled } = this.state;\n\n    const gap = 10;\n\n    const carouselWidth = images.length * itemWidth + gap * (images.length - 1);\n\n    const frameGap = frameSize - 1 < 0\n      ? 0\n      : (frameSize - 1) * gap;\n\n    const frameWidth = itemWidth * frameSize + frameGap;\n\n    const transition = `transform ${animationDuration / 1000}s ease`;\n\n    const scrolledWidth = imagesScrolled * itemWidth + imagesScrolled * gap;\n\n    const transform = `translate(-${scrolledWidth}px, 0)`;\n\n    const disabledPrev = imagesScrolled === 0 && !infinite\n      ? 'Carousel__button--disabled'\n      : '';\n\n    const disabledNext\n    = imagesScrolled === images.length - frameSize && !infinite\n      ? 'Carousel__button--disabled'\n      : '';\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: frameWidth }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition,\n            width: carouselWidth,\n            gap,\n            transform,\n          }}\n        >\n          {images.map((image, i) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${i + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className={`Carousel__button Carousel__button--prev ${disabledPrev}`}\n          onClick={this.handleSlide}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={`Carousel__button Carousel__button--next ${disabledNext}`}\n          onClick={this.handleSlide}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const property = e.target.name;\n    const value = +e.target.value;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [property]: value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form action=\"\" className=\"inputs\">\n          <label htmlFor=\"itemId\">\n            Item width:\n          </label>\n          <input\n            type=\"number\"\n            name=\"itemWidth\"\n            id=\"itemId\"\n            value={itemWidth}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n\n          <label htmlFor=\"frameId\">\n            Frame size:\n          </label>\n          <input\n            type=\"number\"\n            name=\"frameSize\"\n            id=\"frameId\"\n            value={frameSize}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n\n          <label htmlFor=\"stepId\">\n            Step:\n          </label>\n          <input\n            type=\"number\"\n            name=\"step\"\n            id=\"stepId\"\n            value={step}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n          </label>\n          <input\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}