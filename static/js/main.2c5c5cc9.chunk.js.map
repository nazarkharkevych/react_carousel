{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","scrollWidth","gap","gapWidth","props","images","handleSlide","e","buttonType","currentTarget","innerHTML","_this$props","itemWidth","step","infinite","scrollStep","maxScrollWidth","getMaxScrollWidth","nextSlideHandler","prevSlideHandler","setState","prevState","_this$props2","frameSize","_createClass","key","value","_this$props3","this","animationDuration","carouselWidth","frameGap","frameWidth","transition","transform","disabledPrev","disabledNext","_jsxs","className","style","width","children","_jsx","map","image","i","src","alt","type","onClick","Component","App","_React$Component","handleChange","property","target","name","_objectSpread","_defineProperty","_this$state","action","htmlFor","id","onChange","min","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c5c5cc9.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ninterface State {\n  scrollWidth: number;\n}\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    scrollWidth: 0,\n  };\n\n  gap = 10;\n\n  gapWidth = this.gap * (this.props.images.length - 1);\n\n  handleSlide = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const buttonType = e.currentTarget.innerHTML;\n\n    const {\n      itemWidth,\n      step,\n      infinite,\n    } = this.props;\n\n    const scrollStep = step * itemWidth + (step - 1) * this.gap;\n\n    const maxScrollWidth = this.getMaxScrollWidth();\n\n    if (buttonType === 'Next') {\n      this.nextSlideHandler(scrollStep, maxScrollWidth, infinite);\n    }\n\n    if (buttonType === 'Prev') {\n      this.prevSlideHandler(scrollStep, maxScrollWidth, infinite);\n    }\n  };\n\n  nextSlideHandler = (\n    scrollStep: number,\n    maxScrollWidth: number,\n    infinite: boolean,\n  ) => {\n    const { scrollWidth } = this.state;\n\n    if ((scrollWidth + scrollStep < maxScrollWidth)) {\n      this.setState((prevState) => ({\n        scrollWidth: prevState.scrollWidth + scrollStep + this.gap,\n      }));\n    } else {\n      if (infinite && scrollWidth === maxScrollWidth) {\n        this.setState({ scrollWidth: 0 });\n\n        return;\n      }\n\n      this.setState({ scrollWidth: maxScrollWidth });\n    }\n  };\n\n  prevSlideHandler = (\n    scrollStep: number,\n    maxScrollWidth: number,\n    infinite: boolean,\n  ) => {\n    const { scrollWidth } = this.state;\n\n    if (scrollWidth - scrollStep > 0) {\n      this.setState((prevState) => ({\n        scrollWidth: prevState.scrollWidth - scrollStep - this.gap,\n      }));\n    } else {\n      if (infinite && scrollWidth === 0) {\n        this.setState({ scrollWidth: maxScrollWidth });\n\n        return;\n      }\n\n      this.setState({ scrollWidth: 0 });\n    }\n  };\n\n  getMaxScrollWidth = () => {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n    } = this.props;\n\n    const carouselWidth = images.length * itemWidth + this.gapWidth;\n\n    const frameWidth = itemWidth * frameSize + (frameSize - 1) * this.gap;\n\n    return carouselWidth - frameWidth;\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      animationDuration,\n      infinite,\n      frameSize,\n    } = this.props;\n\n    const { scrollWidth } = this.state;\n\n    const carouselWidth = images.length * itemWidth + this.gapWidth;\n\n    const frameGap = frameSize - 1 < 0\n      ? 0\n      : (frameSize - 1) * this.gap;\n\n    const frameWidth = itemWidth * frameSize + frameGap;\n\n    const transition = `transform ${animationDuration / 1000}s ease`;\n\n    const transform = `translate(-${scrollWidth}px, 0)`;\n\n    const disabledPrev = scrollWidth === 0 && !infinite\n      ? 'Carousel__button--disabled'\n      : '';\n\n    const disabledNext\n    = scrollWidth === this.getMaxScrollWidth() && !infinite\n      ? 'Carousel__button--disabled'\n      : '';\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: frameWidth }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition,\n            width: carouselWidth,\n            gap: this.gap,\n            transform,\n          }}\n        >\n          {images.map((image, i) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${i + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className={`Carousel__button Carousel__button--prev ${disabledPrev}`}\n          onClick={this.handleSlide}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={`Carousel__button Carousel__button--next ${disabledNext}`}\n          onClick={this.handleSlide}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const property = e.target.name;\n    const value = +e.target.value;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [property]: value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form action=\"\" className=\"inputs\">\n          <label htmlFor=\"itemId\">\n            Item width:\n          </label>\n          <input\n            type=\"number\"\n            name=\"itemWidth\"\n            id=\"itemId\"\n            value={itemWidth}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n\n          <label htmlFor=\"frameId\">\n            Frame size:\n          </label>\n          <input\n            type=\"number\"\n            name=\"frameSize\"\n            id=\"frameId\"\n            value={frameSize}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n\n          <label htmlFor=\"stepId\">\n            Step:\n          </label>\n          <input\n            type=\"number\"\n            name=\"step\"\n            id=\"stepId\"\n            value={step}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n          </label>\n          <input\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.handleChange}\n            min=\"0\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}